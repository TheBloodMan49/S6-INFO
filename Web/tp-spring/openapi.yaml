openapi: 3.1.0
info:
  title: TP Web INSA Rennes
  description: |-
    Intro au dev d'un back-end REST en Java avec Spring et OpenAPI
  version: 2024.0.0
servers:
  - url: "http://localhost:8080/api"

tags: # Some annotations used to document the route descriptions (optional)
  - name: hello
    description: Démo
  - name: todoV1
    description: Les todos
  - name: todoV2
    description: Todos V2
paths:
  /v1/public/hello/helloworld:
    get:
      tags:
        - hello
      responses:
        '200':
          description: c'est bon

  /v1/public/todo/todo/{id}:
    get:
      summary: Renvoie un todo à partir de son id
      tags:
        - todoV1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: c'est bon
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        400:
          description: todo pas trouvé
          content:
            text/plain:
              schema:
                type: string


    delete:
      summary: Supprime un todo à partir de son id
      tags:
        - todoV1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Réussi
        400:
          description: Pas de todo correspondant à cet id

  /v1/public/todo/todo:
    post:
      summary: Ajoute un todo à la liste
      tags:
        - todoV1
      operationId: postTodoV1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
      responses:
        200:
          description: Todo créé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'

    put:
      summary: Remplace un todo
      tags:
        - todoV1
      operationId: putTodoV1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
      responses:
        200:
          description: Todo modifié
        400:
          description: todo pas trouvé

    patch:
      summary: Remplace certains champs d'un todo
      tags:
        - todoV1
      operationId: patchTodoV1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
      responses:
        200:
          description: Todo modifié
        400:
          description: todo pas trouvé

  /v2/public/todo/todo/{id}:
    get:
      summary: Renvoie un todo à partir de son id
      tags:
        - todoV2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: c'est bon
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        400:
          description: todo pas trouvé
          content:
            text/plain:
              schema:
                type: string


    delete:
      summary: Supprime un todo à partir de son id
      tags:
        - todoV2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Réussi
        400:
          description: Pas de todo correspondant à cet id

  /v2/public/todo/todo:
    post:
      summary: Ajoute un todo
      tags:
        - todoV2
      operationId: postTodoV2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
      responses:
        200:
          description: Todo créé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'

    put:
      summary: Remplace un todo
      tags:
        - todoV2
      operationId: putTodoV2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
      responses:
        200:
          description: Todo modifié
        400:
          description: todo pas trouvé

    patch:
      summary: Remplace certains champs d'un todo
      tags:
        - todoV2
      operationId: patchTodoV2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
      responses:
        200:
          description: Todo modifié
        400:
          description: todo pas trouvé

    get:
      summary: Renvoie la liste des todo ayant un titre contenant le nom
      tags:
        - todoV2
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: La liste des todo
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo'


  /v2/public/todolist/todolist/{id}:
    get:
      summary: Renvoie unn todolist à partir de son id
      tags:
        - todolist
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: c'est bon
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoList'
        400:
          description: todo pas trouvé
          content:
            text/plain:
              schema:
                type: string

    delete:
      summary: Supprime une todolist à partir de son id
      tags:
        - todolist
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Réussi
        404:
          description: Pas de todo correspondant à cet id

    patch:
      summary: Remplace certains champs d'un todo
      tags:
        - todolist
      operationId: patchTodoList
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoList'
      responses:
        200:
          description: Todolist modifiée
        400:
          description: Todolist pas trouvée

  /v2/public/todolist/todolist/{todoListId}/{todoId}:
    post:
      summary: Ajoute un todo à la todolist
      tags:
        - todolist
      parameters:
        - name: todoListId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: todoId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Réussi
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoList'
        404:
          description: Pas de todo correspondant à cet id

  /v2/public/todolist/todolist:
    post:
      summary: Crée une todolist
      tags:
        - todolist
      operationId: postTodoList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NamedDTO'
      responses:
        200:
          description: Todolist créée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoList'

    put:
      summary: Remplace un todo
      tags:
        - todolist
      operationId: putTodoList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoList'
      responses:
        200:
          description: Todolist modifié
        400:
          description: Todolist pas trouvée


components:
  schemas:
    Message:
      type: object
      properties:
        txt:
          type: string
          examples: ["voici un exemple"]

    Todo:
      type: object
      properties:
        id:
          type: integer
          format: int64
          examples: [ 1, 2 ]
        title:
          type: string
          examples: [ "mon todo" ]
        description:
          type: string
          examples: [ "je dois terminer mon TP de Web pour le prochain TP" ]
        categories:
          type: array
          items:
            type: string
            examples: [ "WORK", "ENTERTAINMENT" ]

    TodoList:
      type: object
      properties:
        id:
          type: integer
          format: int64
          examples: [1,2]
        name:
          type: string
          examples: ["Todolist incroyable"]
        todos:
          type: array
          items:
            $ref: '#/components/schemas/Todo'
        owner:
          type: string
          examples: ["Moi"]

    NamedDTO:
      type: object
      properties:
        name:
          type: string
          examples: ["Nouvelle todolist"]
